# Generated by Django 4.0.4 on 2022-05-31 08:51

import app.models.driver.validators
import app.models.file_router
import app.models.load.validators
import app.models.location.validators
import app.models.parties.validators
import app.models.unit.validators
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=56)),
                ('city', models.CharField(max_length=35)),
                ('zip', models.CharField(max_length=10, validators=[app.models.location.validators.validate_zip_code])),
                ('street', models.CharField(max_length=35)),
                ('building', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=35)),
                ('middle_name', models.CharField(blank=True, max_length=35, null=True)),
                ('last_name', models.CharField(max_length=35)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('license_number', models.CharField(max_length=10, validators=[app.models.driver.validators.validate_driver_license])),
                ('hire_type', models.CharField(choices=[('FR', 'Flat rate'), ('CPM', 'Cent per mile'), ('OWN', 'Owner')], max_length=3)),
                ('pay', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('note', models.TextField(blank=True, max_length=100, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.address')),
            ],
            options={
                'verbose_name_plural': 'facilities',
                'unique_together': {('name', 'address')},
            },
        ),
        migrations.CreateModel(
            name='Load',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=50)),
                ('rate', models.PositiveSmallIntegerField()),
                ('total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('group', models.CharField(choices=[('PP', 'Priority pool'), ('PPL', 'Priority pool loaded'), ('URGENT', 'Urgent')], max_length=6)),
                ('status', models.CharField(choices=[('Set up', 'Set up'), ('Available', 'Available'), ('Pending', 'Pending'), ('In progress', 'In progress'), ('Completed', 'Completed'), ('Invoiced', 'Invoiced')], max_length=11)),
                ('notes', models.TextField(blank=True, max_length=100, null=True)),
                ('dispatched', models.BooleanField(default=False)),
                ('invoice_generated', models.BooleanField(default=False, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='LogisticsCompany',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('MC', models.CharField(max_length=6, unique=True, validators=[app.models.parties.validators.validate_MC_number])),
                ('DOT', models.CharField(max_length=7, unique=True, validators=[app.models.parties.validators.validate_DOT_number])),
                ('rate', models.CharField(max_length=1, validators=[app.models.parties.validators.validate_logistics_company_rate])),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.address')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(choices=[('DRM', 'Driver relationship management'), ('SAFETY', 'Safety'), ('OPERATIONS', 'Operations'), ('SHOP', 'Shop'), ('ACCOUNTING', 'Accounting')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10, unique=True)),
                ('year', models.PositiveSmallIntegerField(validators=[app.models.unit.validators.validate_unit_year])),
                ('note', models.TextField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UnitMake',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BrokerCompany',
            fields=[
                ('logisticscompany_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.logisticscompany')),
            ],
            bases=('location.logisticscompany',),
        ),
        migrations.CreateModel(
            name='CarrierCompany',
            fields=[
                ('logisticscompany_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.logisticscompany')),
                ('is_main', models.BooleanField(default=False)),
            ],
            bases=('location.logisticscompany',),
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('unit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unit')),
            ],
            bases=('location.unit',),
        ),
        migrations.CreateModel(
            name='TrailerMake',
            fields=[
                ('unitmake_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unitmake')),
            ],
            bases=('location.unitmake',),
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('unit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unit')),
                ('vin', models.CharField(max_length=17, validators=[app.models.unit.validators.validate_VIN])),
            ],
            bases=('location.unit',),
        ),
        migrations.CreateModel(
            name='TruckMake',
            fields=[
                ('unitmake_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unitmake')),
            ],
            bases=('location.unitmake',),
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=3)),
            ],
            options={
                'unique_together': {('name', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_coordinator', models.BooleanField(default=False)),
                ('roles', models.ManyToManyField(to='location.role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoadHistoryEvent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(default=datetime.datetime(2022, 5, 31, 8, 51, 11, 830369))),
                ('text', models.CharField(max_length=200)),
                ('load', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.load')),
            ],
        ),
        migrations.AddField(
            model_name='load',
            name='coordinator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='coordinator', to='location.users', validators=[app.models.driver.validators.validate_coordinator]),
        ),
        migrations.AddField(
            model_name='load',
            name='driver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='location.driver', validators=[app.models.load.validators.driver_for_load_validator]),
        ),
        migrations.AddField(
            model_name='load',
            name='entered_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='entered_by', to='location.users'),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=app.models.file_router.route)),
                ('notes', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='location.users')),
            ],
        ),
        migrations.AddField(
            model_name='driver',
            name='coordinator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='location.users', validators=[app.models.driver.validators.validate_coordinator]),
        ),
        migrations.AddField(
            model_name='driver',
            name='home_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.address'),
        ),
        migrations.AddField(
            model_name='driver',
            name='license_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.state'),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.state'),
        ),
        migrations.CreateModel(
            name='Accessorial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('DETENTION', 'Detention'), ('LAYOVER', 'Layover'), ('EXTRA MILES', 'Extra miles')], max_length=11)),
                ('amount', models.PositiveSmallIntegerField()),
                ('load', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.load')),
            ],
        ),
        migrations.CreateModel(
            name='TruckModel',
            fields=[
                ('unitmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unitmodel')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.truckmake')),
            ],
            bases=('location.unitmodel',),
        ),
        migrations.CreateModel(
            name='TruckGroup',
            fields=[
                ('unitgroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unitgroup')),
                ('trucks', models.ManyToManyField(to='location.truck')),
            ],
            bases=('location.unitgroup',),
        ),
        migrations.CreateModel(
            name='TruckFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.file')),
                ('truck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.truck')),
            ],
            bases=('location.file',),
        ),
        migrations.AddField(
            model_name='truck',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.truckmodel'),
        ),
        migrations.CreateModel(
            name='TrailerModel',
            fields=[
                ('unitmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unitmodel')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.trailermake')),
            ],
            bases=('location.unitmodel',),
        ),
        migrations.CreateModel(
            name='TrailerGroup',
            fields=[
                ('unitgroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.unitgroup')),
                ('trailers', models.ManyToManyField(to='location.trailer')),
            ],
            bases=('location.unitgroup',),
        ),
        migrations.CreateModel(
            name='TrailerFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.file')),
                ('trailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.trailer')),
            ],
            bases=('location.file',),
        ),
        migrations.AddField(
            model_name='trailer',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.trailermodel'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.file')),
                ('issued_by', models.CharField(choices=[('DOT', 'Department of Transportation'), ('Police', 'Police')], default='DOT', max_length=6)),
                ('charged', models.BooleanField(default=False)),
                ('amt', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.driver')),
                ('issue_state', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.state')),
            ],
            bases=('location.file',),
        ),
        migrations.CreateModel(
            name='LoadStage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.BooleanField(default=True)),
                ('order_number', models.PositiveSmallIntegerField()),
                ('time_from', models.DateTimeField()),
                ('time_to', models.DateTimeField()),
                ('actual_time_from', models.DateTimeField(blank=True, null=True)),
                ('actual_time_to', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, max_length=50, null=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.facility')),
                ('load', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.load')),
            ],
            options={
                'unique_together': {('load', 'order_number', 'type')},
            },
        ),
        migrations.CreateModel(
            name='LoadFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.file')),
                ('type', models.CharField(blank=True, choices=[('RC', 'Rate confirmation'), ('RECEIPT', 'Receipt'), ('BOL', 'Bill of landing'), ('POD', 'Proof of delivery'), ('INVOICE', 'Invoice')], max_length=7, null=True)),
                ('load', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.load')),
            ],
            bases=('location.file',),
        ),
        migrations.AddField(
            model_name='load',
            name='broker_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='location.brokercompany'),
        ),
        migrations.AddField(
            model_name='load',
            name='trailer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='location.trailer'),
        ),
        migrations.CreateModel(
            name='DriverFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='location.file')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.driver')),
            ],
            bases=('location.file',),
        ),
        migrations.AddField(
            model_name='driver',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.carriercompany'),
        ),
        migrations.AddField(
            model_name='driver',
            name='truck',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='location.truck'),
        ),
        migrations.AlterUniqueTogether(
            name='address',
            unique_together={('country', 'state', 'city', 'zip', 'street', 'building')},
        ),
        migrations.AlterUniqueTogether(
            name='driver',
            unique_together={('license_number', 'license_state')},
        ),
    ]
